# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import protos.service_pb2 as service__pb2


class PrimaryDataStructureStub(object):
    """Communication to structures on a primary node
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePrimaryStructure = channel.unary_unary(
                '/PrimaryDataStructure/CreatePrimaryStructure',
                request_serializer=service__pb2.CreatePrimaryStructureRequest.SerializeToString,
                response_deserializer=service__pb2.CreatePrimaryStructureResponse.FromString,
                )
        self.GetValue = channel.unary_unary(
                '/PrimaryDataStructure/GetValue',
                request_serializer=service__pb2.ValueRequest.SerializeToString,
                response_deserializer=service__pb2.ValueResponse.FromString,
                )
        self.GetAllValues = channel.unary_unary(
                '/PrimaryDataStructure/GetAllValues',
                request_serializer=service__pb2.AllValuesRequest.SerializeToString,
                response_deserializer=service__pb2.AllValuesResponse.FromString,
                )
        self.MutationStream = channel.unary_unary(
                '/PrimaryDataStructure/MutationStream',
                request_serializer=service__pb2.StructureMutation.SerializeToString,
                response_deserializer=service__pb2.StructureMutation.FromString,
                )


class PrimaryDataStructureServicer(object):
    """Communication to structures on a primary node
    """

    def CreatePrimaryStructure(self, request, context):
        """A request for the creation of a new primary data structure
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetValue(self, request, context):
        """A request for a value stored in a primary data structure
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllValues(self, request, context):
        """A request for a value stored in a primary data structure
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MutationStream(self, request, context):
        """Mutations to a primary data structure
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PrimaryDataStructureServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePrimaryStructure': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePrimaryStructure,
                    request_deserializer=service__pb2.CreatePrimaryStructureRequest.FromString,
                    response_serializer=service__pb2.CreatePrimaryStructureResponse.SerializeToString,
            ),
            'GetValue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetValue,
                    request_deserializer=service__pb2.ValueRequest.FromString,
                    response_serializer=service__pb2.ValueResponse.SerializeToString,
            ),
            'GetAllValues': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllValues,
                    request_deserializer=service__pb2.AllValuesRequest.FromString,
                    response_serializer=service__pb2.AllValuesResponse.SerializeToString,
            ),
            'MutationStream': grpc.unary_unary_rpc_method_handler(
                    servicer.MutationStream,
                    request_deserializer=service__pb2.StructureMutation.FromString,
                    response_serializer=service__pb2.StructureMutation.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'PrimaryDataStructure', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PrimaryDataStructure(object):
    """Communication to structures on a primary node
    """

    @staticmethod
    def CreatePrimaryStructure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PrimaryDataStructure/CreatePrimaryStructure',
            service__pb2.CreatePrimaryStructureRequest.SerializeToString,
            service__pb2.CreatePrimaryStructureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PrimaryDataStructure/GetValue',
            service__pb2.ValueRequest.SerializeToString,
            service__pb2.ValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllValues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PrimaryDataStructure/GetAllValues',
            service__pb2.AllValuesRequest.SerializeToString,
            service__pb2.AllValuesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MutationStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/PrimaryDataStructure/MutationStream',
            service__pb2.StructureMutation.SerializeToString,
            service__pb2.StructureMutation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class FusedDataStructureStub(object):
    """Communication to structures on a backup node
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateFusedStructure = channel.unary_unary(
                '/FusedDataStructure/CreateFusedStructure',
                request_serializer=service__pb2.CreateFusedStructureRequest.SerializeToString,
                response_deserializer=service__pb2.CreateFusedStructureResponse.FromString,
                )
        self.MutationStream = channel.unary_unary(
                '/FusedDataStructure/MutationStream',
                request_serializer=service__pb2.StructureMutation.SerializeToString,
                response_deserializer=service__pb2.StructureMutation.FromString,
                )
        self.GetFusedRecoveryData = channel.unary_unary(
                '/FusedDataStructure/GetFusedRecoveryData',
                request_serializer=service__pb2.FusedRecoveryDataRequest.SerializeToString,
                response_deserializer=service__pb2.FusedRecoveryDataResponse.FromString,
                )


class FusedDataStructureServicer(object):
    """Communication to structures on a backup node
    """

    def CreateFusedStructure(self, request, context):
        """A request for the creation of a new fused data structure
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MutationStream(self, request, context):
        """Mutations to a fused data structure
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFusedRecoveryData(self, request, context):
        """A request for all data stored that is used in recovery
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FusedDataStructureServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateFusedStructure': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFusedStructure,
                    request_deserializer=service__pb2.CreateFusedStructureRequest.FromString,
                    response_serializer=service__pb2.CreateFusedStructureResponse.SerializeToString,
            ),
            'MutationStream': grpc.unary_unary_rpc_method_handler(
                    servicer.MutationStream,
                    request_deserializer=service__pb2.StructureMutation.FromString,
                    response_serializer=service__pb2.StructureMutation.SerializeToString,
            ),
            'GetFusedRecoveryData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFusedRecoveryData,
                    request_deserializer=service__pb2.FusedRecoveryDataRequest.FromString,
                    response_serializer=service__pb2.FusedRecoveryDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'FusedDataStructure', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FusedDataStructure(object):
    """Communication to structures on a backup node
    """

    @staticmethod
    def CreateFusedStructure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FusedDataStructure/CreateFusedStructure',
            service__pb2.CreateFusedStructureRequest.SerializeToString,
            service__pb2.CreateFusedStructureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MutationStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FusedDataStructure/MutationStream',
            service__pb2.StructureMutation.SerializeToString,
            service__pb2.StructureMutation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFusedRecoveryData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FusedDataStructure/GetFusedRecoveryData',
            service__pb2.FusedRecoveryDataRequest.SerializeToString,
            service__pb2.FusedRecoveryDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
